<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="csql">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files (x86)\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/../Debug/csql.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Targets>
   <Target Name="$(ProjectDir)/../Debug/csql.exe">
    <Modules>
     <Module Name="csql.exe">
      <Namespaces>
       <Namespace Name="CommandLine">
        <Types>
         <Type Name="ArgumentAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2009-03-27 19:26:08Z">
            <Issue>
             <Item>'ArgumentAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#LongName">
            <Accessors>
             <Accessor Name="#set_LongName(System.String)">
              <Messages>
               <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Created="2009-03-27 19:26:08Z">
                <Issue Name="IsNullOrEmpty">
                 <Item>'string.operator !=(string, string)'</Item>
                 <Item>'ArgumentAttribute.LongName.set(string)'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2009-03-27 19:26:08Z" FixCategory="NonBreaking">
              <Issue Name="BaseType">
               <Item>'ArgumentAttribute.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ArgumentType">
          <Messages>
           <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Created="2009-03-27 19:26:08Z" FixCategory="Breaking">
            <Issue Name="FlagsRename">
             <Item>'ArgumentType'</Item>
             <Item>'ArgumentType.AtMostOnce'</Item>
            </Issue>
           </Message>
           <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Created="2009-03-27 19:26:08Z">
            <Issue>
             <Item>'ArgumentType'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#LastOccurenceWins">
            <Messages>
             <Message Id="Occurence" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2009-03-27 19:26:08Z">
              <Issue Name="Member">
               <Item>Occurence</Item>
               <Item>'ArgumentType.LastOccurenceWins'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DefaultArgumentAttribute">
          <Messages>
           <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Created="2009-03-27 19:26:08Z">
            <Issue>
             <Item>'DefaultArgumentAttribute'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="Parser">
          <Members>
           <Member Name="#DefaultValue(CommandLine.ArgumentAttribute,System.Reflection.FieldInfo)">
            <Messages>
             <Message Id="field" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2009-03-27 19:26:08Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'field'</Item>
               <Item>'Parser.DefaultValue(ArgumentAttribute, FieldInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConsoleScreenBufferInfo(System.Int32,CommandLine.Parser+CONSOLE_SCREEN_BUFFER_INFO&amp;)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.GetConsoleScreenBufferInfo(int, ref Parser.CONSOLE_SCREEN_BUFFER_INFO)'</Item>
              </Issue>
             </Message>
             <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Created="2009-03-27 19:26:08Z" FixCategory="NonBreaking">
              <Issue Name="Parameter">
               <Item>'hConsoleOutput'</Item>
               <Item>'Parser.GetConsoleScreenBufferInfo(int, ref Parser.CONSOLE_SCREEN_BUFFER_INFO)'</Item>
               <Item>4</Item>
               <Item>64-bit</Item>
               <Item>8</Item>
               <Item>'int'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetConsoleWindowWidth()">
            <Messages>
             <Message Id="rc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.GetConsoleWindowWidth()'</Item>
               <Item>'rc'</Item>
               <Item>'int'</Item>
              </Issue>
             </Message>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2009-03-27 19:26:08Z">
              <Issue Certainty="50">
               <Item>'Parser.GetConsoleWindowWidth()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetStdHandle(System.Int32)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.GetStdHandle(int)'</Item>
              </Issue>
             </Message>
             <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Created="2009-03-27 19:26:08Z" FixCategory="NonBreaking">
              <Issue Name="Return">
               <Item>'Parser.GetStdHandle(int)'</Item>
               <Item>4</Item>
               <Item>64-bit</Item>
               <Item>8</Item>
               <Item>'int'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#HelpText(CommandLine.ArgumentAttribute,System.Reflection.FieldInfo)">
            <Messages>
             <Message Id="field" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2009-03-27 19:26:08Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'field'</Item>
               <Item>'Parser.HelpText(ArgumentAttribute, FieldInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LexFileArguments(System.String,System.String[]&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.LexFileArguments(string, out string[])'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Parser+Argument">
          <Members>
           <Member Name="#.ctor(CommandLine.ArgumentAttribute,System.Reflection.FieldInfo,CommandLine.ErrorReporter)">
            <Messages>
             <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.Argument.Argument(ArgumentAttribute, FieldInfo, ErrorReporter)'</Item>
               <Item>'Parser.Argument.seenValue'</Item>
               <Item>'bool'</Item>
               <Item>false</Item>
              </Issue>
             </Message>
             <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Created="2009-03-27 19:26:08Z">
              <Issue Name="IsNullOrEmpty">
               <Item>'string.operator !=(string, string)'</Item>
               <Item>'Parser.Argument.Argument(ArgumentAttribute, FieldInfo, ErrorReporter)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ParseValue(System.Type,System.String,System.Object&amp;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.Argument.ParseValue(Type, string, out object)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Parser+HelpArgument">
          <Members>
           <Member Name="#.ctor()">
            <Messages>
             <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Created="2009-03-27 19:26:08Z">
              <Issue>
               <Item>'Parser.HelpArgument.HelpArgument()'</Item>
               <Item>'Parser.HelpArgument.help'</Item>
               <Item>'bool'</Item>
               <Item>false</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="csql">
        <Types>
         <Type Name="DbConnection">
          <Members>
           <Member Name="#Dispose()">
            <Messages>
             <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Created="2009-03-27 19:26:08Z">
              <Issue Name="DisposeImplementation">
               <Item>'DbConnection.Dispose()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TerminateException">
          <Messages>
           <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Created="2009-03-27 19:26:08Z">
            <Issue Name="MissingConstructor">
             <Item>'TerminateException'</Item>
             <Item>private TerminateException(SerializationInfo, StreamingContext)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'TerminateException'</Item>
             <Item>public TerminateException(String)</Item>
            </Issue>
            <Issue Name="MissingConstructor">
             <Item>'TerminateException'</Item>
             <Item>public TerminateException(String, Exception)</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
    <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805">
    <Resolution Name="Default">{0} initializes field {1} of type {2} to {3}. Remove this initialization because it will be done automatically by the runtime.</Resolution>
   </Rule>
   <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
    <Resolution Name="FlagsRename">In enum {0}, change the name of {1} to 'None'.</Resolution>
   </Rule>
   <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
    <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   </Rule>
   <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
    <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   </Rule>
   <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
    <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   </Rule>
   <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
    <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   </Rule>
   <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
    <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
    <Resolution Name="Return">As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</Resolution>
   </Rule>
   <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
    <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   </Rule>
   <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
    <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
    <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
