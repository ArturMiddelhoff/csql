<StyleCopSettings Version="4.3">
	<Parsers>
		<Parser ParserId="Microsoft.StyleCop.CSharp.CsParser">
			<ParserSettings>
				<BooleanProperty Name="AnalyzeDesignerFiles">False</BooleanProperty>
			</ParserSettings>
		</Parser>
	</Parsers>
	<Analyzers>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.DocumentationRules">
			<Rules>
				<!-- 
					Good naming is more important than documentation.
				-->
				<Rule Name="ElementsMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PartialElementsMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<!-- 
					Good naming is more important than documentation.
				-->
				<Rule Name="EnumerationItemsMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="DocumentationMustContainValidXml">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<!-- 
					Good naming is more important than documentation.
				-->
				<Rule Name="ElementDocumentationMustHaveSummary">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PartialElementDocumentationMustHaveSummary">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementDocumentationMustHaveSummaryText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PartialElementDocumentationMustHaveSummaryText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<!-- 
					Good naming is more important than documentation.
				-->
				<Rule Name="ElementParametersMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementParameterDocumentationMustMatchElementParameters">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementParameterDocumentationMustDeclareParameterName">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementParameterDocumentationMustHaveText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementReturnValueMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementReturnValueDocumentationMustHaveText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="GenericTypeParametersMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="GenericTypeParametersMustBeDocumentedPartialClass">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="GenericTypeParameterDocumentationMustMatchTypeParameters">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="GenericTypeParameterDocumentationMustDeclareParameterName">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="GenericTypeParameterDocumentationMustHaveText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PropertySummaryDocumentationMustMatchAccessors">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PropertySummaryDocumentationMustOmitSetAccessorWithRestrictedAccess">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementDocumentationMustNotBeCopiedAndPasted">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="DocumentationMustMeetCharacterPercentage">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="DocumentationTextMustMeetMinimumCharacterLength">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ConstructorSummaryDocumentationMustBeginWithStandardText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="DestructorSummaryDocumentationMustBeginWithStandardText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="DocumentationHeadersMustNotContainBlankLines">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="IncludedDocumentationXPathDoesNotExist">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="IncludeNodeDoesNotContainValidFileAndPath">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileMustHaveHeader">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileHeaderMustShowCopyright">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileHeaderMustHaveCopyrightText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileHeaderMustContainFileName">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileHeaderFileNameDocumentationMustMatchFileName">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileHeaderMustHaveValidCompanyText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings>
				<StringProperty Name="CompanyName">SQL Service GmbH</StringProperty>
				<StringProperty Name="Copyright">SQL Service GmbH</StringProperty>
			</AnalyzerSettings>
		</Analyzer>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.LayoutRules">
			<Rules>
				<!-- 
					Allow some personal styling.
				-->
				<Rule Name="CurlyBracketsForMultiLineStatementsMustNotShareLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementMustNotBeOnSingleLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="CurlyBracketsMustNotBeOmitted">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="AllAccessorsMustBeMultiLineOrSingleLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingCurlyBracketMustBeFollowedByBlankLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="CodeMustNotContainMultipleBlankLinesInARow">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingCurlyBracketsMustNotBePrecededByBlankLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementsMustBeSeparatedByBlankLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.MaintainabilityRules">
			<Rules>
				<Rule Name="DebugAssertMustProvideMessageText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="DebugFailMustProvideMessageText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">True</BooleanProperty>
					</RuleSettings>
				</Rule>
				<!-- 
					To many bracket are just making the expression less readable.
				-->
				<Rule Name="ArithmeticExpressionsMustDeclarePrecedence">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<!-- 
					To many bracket are just making the expression less readable.
				-->
				<Rule Name="ConditionalExpressionsMustDeclarePrecedence">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.NamingRules">
			<Rules>
				<Rule Name="FieldNamesMustNotContainUnderscore">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings>
				<CollectionProperty Name="Hungarian">
					<!-- Common abbreviation for database -->
					<Value>db</Value>
					<!-- Common abbreviation for visual studio -->
					<Value>vs</Value>
				</CollectionProperty>
			</AnalyzerSettings>
		</Analyzer>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.ReadabilityRules">
			<Rules>
				<Rule Name="PrefixLocalCallsWithThis">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="UseStringEmptyForEmptyStrings">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.SpacingRules">
			<Rules>
				<!-- 
					Just set tab width to four.
				-->
				<Rule Name="TabsMustNotBeUsed">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="OpeningParenthesisMustBeSpacedCorrectly">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingParenthesisMustBeSpacedCorrectly">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingSquareBracketsMustBeSpacedCorrectly">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingCurlyBracketsMustBeSpacedCorrectly">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="Microsoft.StyleCop.CSharp.OrderingRules">
			<Rules>
				<Rule Name="UsingDirectivesMustBePlacedWithinNamespace">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<!--
					While this is a good rule for public or protected methods
					we don't see a benifit for private methods which usually should
					be placed near to their callers.
				-->
				<Rule Name="StaticElementsMustAppearBeforeInstanceElements">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
	</Analyzers>
</StyleCopSettings>